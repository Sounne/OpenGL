[Vertex Shader] //	Vertex en 4D
	|
[Perspective Divide] //	Vertex en 3D
	|
	Position3D = gl_Position3D.xyz /	Position3D.w
	Positon3DCubeMap = gl_Position.xyww -> z = w -> x,y,1.0
	|
[Primitive Assembly]	//	SI GL_TRIANGLES, on attends 3 vertex
	|
	Position2D = Position3D.xy / Position3D.z
	|
[Rasterizer]

glEnable(GL_DEPTH_TEST)
glDepthFunc(GL_LESS) //	La fonction de comparaison du depth test

Par default, la fonction de test est inferieur strict (less)

glDepthFunc(GL_LEQUAL)
//	GL_LEQUAL important pour unr cubemap "infinie"
//	car la cubemap est projetee sur le plan FAR
//	A supposer qu'on ait un object au niveau du plan FAR
//	On risque le z-fight avec la skybox en mode  GL_LESS

glDepthMast(false)
drawCubeMap
glDepthMask(true)
